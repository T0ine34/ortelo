{"list":[{"title":"ClientSocket","link":"<a href=\"ClientSocket.html\">ClientSocket</a>","description":"This namespace contain all Socket-related client classes."},{"title":"ClientSocket.CSocket","link":"<a href=\"ClientSocket.CSocket.html\">CSocket</a>","description":"Create a new CSocket object."},{"title":"ClientSocket.CSocket#emit","link":"<a href=\"ClientSocket.CSocket.html#emit\">emit</a>","description":"emit a new event to the server."},{"title":"ClientSocket.CSocket#id","link":"<a href=\"ClientSocket.CSocket.html#id\">id</a>","description":"This method should not be used, it's only here for compatibility with older code."},{"title":"ClientSocket.CSocket#on","link":"<a href=\"ClientSocket.CSocket.html#on\">on</a>","description":"Register a new event listener."},{"title":"ClientSocket.CSocket#once","link":"<a href=\"ClientSocket.CSocket.html#once\">once</a>","description":"Register a new event listener that will be called only once."},{"title":"Events","link":"<a href=\"Events.html\">Events</a>","description":"This namespace contains classes used for handling events."},{"title":"Events#EVENTS","link":"<a href=\"Events.html#EVENTS\">EVENTS</a>","description":"This instance of {@link Events.EVENTS_NAMESPACE} contains all the events that can be sent between the client and the server.\rAccessing a property of this object will return an {@link Events.EVENT} or a {@link Events.EVENTS_NAMESPACE} object."},{"title":"Events.EVENT","link":"<a href=\"Events.EVENT.html\">EVENT</a>","description":"This class represent an event that can be sent between the client and the server.\rThis class is not meant to be used directly, use {@link Events.EVENTS} instead, witch is an instance of {@link Events.EVENTS_NAMESPACE}, and contains all the events that can be sent between the client and the server."},{"title":"Events.EVENT#toString","link":"<a href=\"Events.EVENT.html#toString\">toString</a>","description":"this method is automatically called when the object is converted to a string."},{"title":"Events.EVENTS_NAMESPACE","link":"<a href=\"Events.EVENTS_NAMESPACE.html\">EVENTS_NAMESPACE</a>","description":"This namespace can contains events that can be sent between the client and the server, and other namespaces.\rThis class is not meant to be used directly, use {@link Events.EVENTS}, witch is an instance of this class instead."},{"title":"Events.EVENTS_NAMESPACE#has","link":"<a href=\"Events.EVENTS_NAMESPACE.html#has\">has</a>","description":"return true if the event is in the namespace, false otherwise."},{"title":"Events.EVENTS_NAMESPACE#toString","link":"<a href=\"Events.EVENTS_NAMESPACE.html#toString\">toString</a>","description":"this method is automatically called when the object is converted to a string."},{"title":"Game","link":"<a href=\"Game.html\">Game</a>","description":"this constructor create a game object, but you need to call the init method to load the game"},{"title":"Game#icon","link":"<a href=\"Game.html#icon\">icon</a>","description":"access to the icon of the game as a base64 string"},{"title":"Game#init","link":"<a href=\"Game.html#init\">init</a>","description":"this method load the game from the zip file, allowing to read game data"},{"title":"Game#name","link":"<a href=\"Game.html#name\">name</a>","description":"access to the name of the game"},{"title":"GameLoader","link":"<a href=\"GameLoader.html\">GameLoader</a>"},{"title":"JsonChecker.is_json","link":"<a href=\"JsonChecker.html#.is_json\">is_json</a>","description":"this function checks if a file is a json file, regardless of it's extension"},{"title":"JsonChecker.is_json_matching","link":"<a href=\"JsonChecker.html#.is_json_matching\">is_json_matching</a>","description":"this function checks if a json file matches a given structure file\r\rif no structure file is given, the function will try to find the corresponding structure file"},{"title":"JsonChecker.json_matching_result","link":"<a href=\"JsonChecker.html#.json_matching_result\">json_matching_result</a>","description":"an object containing the result of the json matching (this is an array only returned by the function {@link is_json_matching})"},{"title":"Server","link":"<a href=\"Server.html\">Server</a>","description":"This namespace contains all the classes and functions related to the server"},{"title":"Server.JsonChecker","link":"<a href=\"Server.JsonChecker.html\">JsonChecker</a>","description":"contains JSON-related functions"},{"title":"Server.ServerSocket","link":"<a href=\"Server.ServerSocket.html\">ServerSocket</a>","description":"This namespace contains the classes used to create a custom socket.io server implementing rooms and events."},{"title":"Server.User","link":"<a href=\"Server.User.html\">User</a>"},{"title":"Server.User#emit","link":"<a href=\"Server.User.html#emit\">emit</a>","description":"emit an event to the user"},{"title":"Server.User#joinRoom","link":"<a href=\"Server.User.html#joinRoom\">joinRoom</a>","description":"Method for joining a room"},{"title":"Server.User#leaveRoom","link":"<a href=\"Server.User.html#leaveRoom\">leaveRoom</a>","description":"Method for leaving a room"},{"title":"Server.User#on","link":"<a href=\"Server.User.html#on\">on</a>","description":"add a listener to an event"},{"title":"Server.User#once","link":"<a href=\"Server.User.html#once\">once</a>","description":"add a listener to an event, but it will be called only once"},{"title":"Server.User#rooms","link":"<a href=\"Server.User.html#rooms\">rooms</a>","description":"An array of the rooms the user is in"},{"title":"Server.User#socket","link":"<a href=\"Server.User.html#socket\">socket</a>","description":"The socket of the user, will always be a {@link ServerSocket.CSocket}, regadless of the type of socket passed in the constructor"},{"title":"Server.User#username","link":"<a href=\"Server.User.html#username\">username</a>","description":"The username of the user"},{"title":"Server.parseCMD","link":"<a href=\"Server.html#.parseCMD\">parseCMD</a>","description":"Parse a command and execute it."},{"title":"ServerSocket.CIO","link":"<a href=\"ServerSocket.CIO.html\">CIO</a>","description":"This class represent a socket.io server."},{"title":"ServerSocket.CIO#emit","link":"<a href=\"ServerSocket.CIO.html#emit\">emit</a>","description":"emit an event to all the sockets connected to the server."},{"title":"ServerSocket.CIO#on","link":"<a href=\"ServerSocket.CIO.html#on\">on</a>","description":"register a new event listener for all sockets connected to the server."},{"title":"ServerSocket.CIO#transmit","link":"<a href=\"ServerSocket.CIO.html#transmit\">transmit</a>","description":"Transmit an event sent by a user to all the sockets connected to the server."},{"title":"ServerSocket.CIO.from_server","link":"<a href=\"ServerSocket.CIO.html#.from_server\">from_server</a>","description":"Create a {@link ServerSocket.CIO CIO} object from an express server object."},{"title":"ServerSocket.CSocket","link":"<a href=\"ServerSocket.CSocket.html\">CSocket</a>","description":"This class represent a socket."},{"title":"ServerSocket.CSocket#disconnect","link":"<a href=\"ServerSocket.CSocket.html#disconnect\">disconnect</a>","description":"Disconnect the socket, closing the connection."},{"title":"ServerSocket.CSocket#emit","link":"<a href=\"ServerSocket.CSocket.html#emit\">emit</a>","description":"Emit an event to the client. This event is initiated by the server. If the event is sent by a user, use {@link ServerSocket.CSocket#transmit transmit} instead."},{"title":"ServerSocket.CSocket#id","link":"<a href=\"ServerSocket.CSocket.html#id\">id</a>","description":"this id is unique for each socket, and will be different for each connection of the same client (this can't be used to identify a client)"},{"title":"ServerSocket.CSocket#join","link":"<a href=\"ServerSocket.CSocket.html#join\">join</a>","description":"add the socket to a room."},{"title":"ServerSocket.CSocket#leave","link":"<a href=\"ServerSocket.CSocket.html#leave\">leave</a>","description":"remove the socket from a room."},{"title":"ServerSocket.CSocket#on","link":"<a href=\"ServerSocket.CSocket.html#on\">on</a>","description":"Register a new event listener. the callback will be called every time the event is received. For a one time event listener, use {@link ServerSocket.CSocket#once once} instead."},{"title":"ServerSocket.CSocket#once","link":"<a href=\"ServerSocket.CSocket.html#once\">once</a>","description":"Register a new event listener that will be caught only once."},{"title":"ServerSocket.CSocket#transmit","link":"<a href=\"ServerSocket.CSocket.html#transmit\">transmit</a>","description":"Transmit an event  sent by a user to the client. This method is used to transmit an event that was sent by a user to the client; if the event is intitiated by the server, use {@link ServerSocket.CSocket#emit emit} instead."},{"title":"ServerSocket.Room","link":"<a href=\"ServerSocket.Room.html\">Room</a>","description":"This class is used to create a room."},{"title":"ServerSocket.Room#addUser","link":"<a href=\"ServerSocket.Room.html#addUser\">addUser</a>","description":"Add a user to the room."},{"title":"ServerSocket.Room#add_to_blacklist","link":"<a href=\"ServerSocket.Room.html#add_to_blacklist\">add_to_blacklist</a>","description":"if the user is already in the blacklist, nothing will happen."},{"title":"ServerSocket.Room#add_to_list","link":"<a href=\"ServerSocket.Room.html#add_to_list\">add_to_list</a>","description":"if the user is already in the list, nothing will happen."},{"title":"ServerSocket.Room#add_to_whitelist","link":"<a href=\"ServerSocket.Room.html#add_to_whitelist\">add_to_whitelist</a>","description":"if the user is already in the whitelist, nothing will happen."},{"title":"ServerSocket.Room#can_join","link":"<a href=\"ServerSocket.Room.html#can_join\">can_join</a>","description":"Tell if a user can join the room."},{"title":"ServerSocket.Room#can_see","link":"<a href=\"ServerSocket.Room.html#can_see\">can_see</a>","description":"if the room is visible, everyone can see it, otherwise only users that can join it can see it."},{"title":"ServerSocket.Room#emit","link":"<a href=\"ServerSocket.Room.html#emit\">emit</a>","description":"Emit an event to all the users in the room."},{"title":"ServerSocket.Room#isIn","link":"<a href=\"ServerSocket.Room.html#isIn\">isIn</a>","description":"Tell if a user is in the room."},{"title":"ServerSocket.Room#join","link":"<a href=\"ServerSocket.Room.html#join\">join</a>"},{"title":"ServerSocket.Room#kick","link":"<a href=\"ServerSocket.Room.html#kick\">kick</a>","description":"force a user to leave the room."},{"title":"ServerSocket.Room#name","link":"<a href=\"ServerSocket.Room.html#name\">name</a>","description":"Return the name of the room."},{"title":"ServerSocket.Room#on","link":"<a href=\"ServerSocket.Room.html#on\">on</a>","description":"Register a new event listener for all the users in the room."},{"title":"ServerSocket.Room#removeUser","link":"<a href=\"ServerSocket.Room.html#removeUser\">removeUser</a>","description":"Remove a user from the room."},{"title":"ServerSocket.Room#transmit","link":"<a href=\"ServerSocket.Room.html#transmit\">transmit</a>","description":"this method is used to transmit an event that was sent by a user in the room to all the other users in the room; if the event is intitiated by the server, use {@link Room#emit} instead."},{"title":"ServerSocket.Room#use_whitelist","link":"<a href=\"ServerSocket.Room.html#use_whitelist\">use_whitelist</a>","description":"if the list mode is changed, the list will be cleared."},{"title":"ServerSocket.Room#use_whitelist","link":"<a href=\"ServerSocket.Room.html#use_whitelist\">use_whitelist</a>","description":"Return true if the room is using a whitelist, false otherwise."},{"title":"ServerSocket.Room#users","link":"<a href=\"ServerSocket.Room.html#users\">users</a>","description":"Return the users in the room."},{"title":"ServerSocket.Room#visible","link":"<a href=\"ServerSocket.Room.html#visible\">visible</a>","description":"Set the visibility of the room."},{"title":"ServerSocket.Room#visible","link":"<a href=\"ServerSocket.Room.html#visible\">visible</a>","description":"Return true if the room is visible, false otherwise."},{"title":"Settings","link":"<a href=\"Settings.html\">Settings</a>","description":"constructor for the Settings class"},{"title":"Settings#delete","link":"<a href=\"Settings.html#delete\">delete</a>","description":"delete a value in the settings file, does nothing if the key does not exist"},{"title":"Settings#get","link":"<a href=\"Settings.html#get\">get</a>","description":"get a value from the settings file"},{"title":"Settings#has","link":"<a href=\"Settings.html#has\">has</a>","description":"check if a key exists in the settings file"},{"title":"Settings#save","link":"<a href=\"Settings.html#save\">save</a>","description":"save the settings file"},{"title":"Settings#set","link":"<a href=\"Settings.html#set\">set</a>","description":"set a value in the settings file, creating the keys if they do not exist"},{"title":"public/modules/events/events.js","link":"<a href=\"public_modules_events_events.js.html\">public/modules/events/events.js</a>","description":"This file contains the events that can be sent between the client and the server."},{"title":"server.js","link":"<a href=\"server.js.html\">server.js</a>","description":"This file is the main file of the server. It contains the server initialization, the server configuration and the server events."},{"title":"server_modules/cmd/main.js","link":"<a href=\"server_modules_cmd_main.js.html\">server_modules/cmd/main.js</a>","description":"This file is only used on the server side;"},{"title":"server_modules/events/main.js","link":"<a href=\"server_modules_events_main.js.html\">server_modules/events/main.js</a>","description":"This file is only used on the server side; another file is used on the client side."},{"title":"server_modules/loader/game.js","link":"<a href=\"server_modules_loader_game.js.html\">server_modules/loader/game.js</a>","description":"this file contain a class to load a game from a zip file"}]}